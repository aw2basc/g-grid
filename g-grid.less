// ------------------g-grid----------------- 
// ----https://github.com/aw2basc/g-grid----
//
// Copyright (C) 2012 Justin S Maxwell
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

// HD
// 1848 grid/WUXGA
// vars
@width-1848:1848px;
@module-1848:54px;
@gutter-1848:24px;
@padding-1848:25px;
@columns-1848:24;
// fluid vars
@module-1848-fluid:100% * (@module-1848 / @width-1848);
@gutter-1848-fluid:100% * (@gutter-1848 / @width-1848);
@padding-1848-fluid:100% * (@padding-1848 / (@width-1848 + @padding-1848 * 2));

// props
.g-grid(@a, 1848) when (isnumber(@a)) {
	.g-grid-props(@a, @width-1848, @module-1848, @gutter-1848, false);
}
.g-grid(all, 1848) {
	.g-grid-props(@columns-1848, @width-1848, @module-1848, @gutter-1848, false);
}
.g-grid(padding, 1848) {
	.g-grid-padding(@padding-1848);
}
.g-grid(padding, 1848, fluid) {
	.g-grid-padding(@padding-1848-fluid);
}
.g-grid(@a, 1848, only) when (isnumber(@a)) {
	.g-grid-width(@a,@module-1848,@gutter-1848);
}
.g-grid(@a, 1848, lead) when (isnumber(@a)) {
	.g-grid-props(@a, @width-1848, @module-1848, @gutter-1848, lead);
}
// fluid
.g-grid(@a, 1848, fluid) when (isnumber(@a)) {
	.g-grid-props(@a, 100%, @module-1848-fluid, @gutter-1848-fluid, false);
}
.g-grid(@a, 1848, fluid, only) when (isnumber(@a)) {
	.g-grid-width(@a, @module-1848-fluid, @gutter-1848-fluid);
}
.g-grid(@a, 1848, fluid, lead) when (isnumber(@a)) {
	.g-grid-props(@a, 100%, @module-1848-fluid, @gutter-1848-fluid, lead);
}

// h
.g-grid(@a, h) when not (@a = a)  and not (@a = p) { .g-grid(@a, 1848); }
.g-grid(@a, h, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 1848, @b); }
.g-grid(@a, h, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 1848, @b, @c); }

// hd
.g-grid(@a, hd) when not (@a = a) and not (@a = p) { .g-grid(@a, 1848); }
.g-grid(@a, hd, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 1848, @b); }
.g-grid(@a, hd, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 1848, @b, @c); }

// WUXGA
.g-grid(@a, WUXGA) when not (@a = a) and not (@a = p) { .g-grid(@a, 1848); }
.g-grid(@a, WUXGA, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 1848, @b); }
.g-grid(@a, WUXGA, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 1848, @b, @c); }


// wide
// 1314 grid/WXGA
// vars
@width-1314:1314px;
@module-1314:54px;
@gutter-1314:30px;
@padding-1314:15px;
@columns-1314:16;
// fluid wide vars
@module-1314-fluid:100% * (@module-1314 / @width-1314);
@gutter-1314-fluid:100% * (@gutter-1314 / @width-1314);
@padding-1314-fluid:100% * (@padding-1314 / (@width-1314 + @padding-1314 * 2));

// props
.g-grid(@a, 1314) when (isnumber(@a)) {
	.g-grid-props(@a, @width-1314, @module-1314, @gutter-1314, false);
}
.g-grid(all, 1314) {
	.g-grid-props(@columns-1314, @width-1314, @module-1314, @gutter-1314, false);
}
.g-grid(padding, 1314) {
	.g-grid-padding(@padding-1314);
}
.g-grid(padding, 1314, fluid) {
	.g-grid-padding(@padding-1314-fluid);
}
.g-grid(@a, 1314, only) when (isnumber(@a)) {
	.g-grid-width(@a,@module-1314,@gutter-1314);
}
.g-grid(@a, 1314, lead) when (isnumber(@a)) {
	.g-grid-props(@a, @width-1314, @module-1314, @gutter-1314, lead);
}
// fluid
.g-grid(@a, 1314, fluid) when (isnumber(@a)) {
	.g-grid-props(@a, 100%, @module-1314-fluid, @gutter-1314-fluid, false);
}
.g-grid(@a, 1314, fluid, only) when (isnumber(@a)) {
	.g-grid-width(@a, @module-1314-fluid, @gutter-1314-fluid);
}
.g-grid(@a, 1314, fluid, lead) when (isnumber(@a)) {
	.g-grid-props(@a, 100%, @module-1314-fluid, @gutter-1314-fluid, lead);
}

// w
.g-grid(@a, w) when not (@a = a)  and not (@a = p) { .g-grid(@a, 1314); }
.g-grid(@a, w, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 1314, @b); }
.g-grid(@a, w, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 1314, @b, @c); }

// wide
.g-grid(@a, wide) when not (@a = a) and not (@a = p) { .g-grid(@a, 1314); }
.g-grid(@a, wide, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 1314, @b); }
.g-grid(@a, wide, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 1314, @b, @c); }

// WXGA
.g-grid(@a, WXGA) when not (@a = a) and not (@a = p) { .g-grid(@a, 1314); }
.g-grid(@a, WXGA, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 1314, @b); }
.g-grid(@a, WXGA, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 1314, @b, @c); }


// desktop
// 978 grid/XGA
// vars
@width-978:978px;
@module-978:54px;
@gutter-978:30px;
@padding-978:12px;
@columns-978:12;
// fluid desktop vars
@module-978-fluid:100% * (@module-978 / @width-978);
@gutter-978-fluid:100% * (@gutter-978 / @width-978);
@padding-978-fluid:100% * (@padding-978 / (@width-978 + @padding-978 * 2));

// props
.g-grid(@a, 978) when (isnumber(@a)) {
	.g-grid-props(@a, @width-978, @module-978, @gutter-978, false);
}
.g-grid(all, 978) {
	.g-grid-props(@columns-978, @width-978, @module-978, @gutter-978, false);
}
.g-grid(padding, 978) {
	.g-grid-padding(@padding-978);
}
.g-grid(padding, 978, fluid) {
	.g-grid-padding(@padding-978-fluid);
}
.g-grid(@a, 978, only) when (isnumber(@a)) {
	.g-grid-width(@a,@module-978,@gutter-978);
}
.g-grid(@a, 978, lead) when (isnumber(@a)) {
	.g-grid-props(@a, @width-978, @module-978, @gutter-978, lead);
}
// fluid
.g-grid(@a, 978, fluid) when (isnumber(@a)) {
	.g-grid-props(@a, 100%, @module-978-fluid, @gutter-978-fluid, false);
}
.g-grid(@a, 978, fluid, only) when (isnumber(@a)) {
	.g-grid-width(@a, @module-978-fluid, @gutter-978-fluid);
}
.g-grid(@a, 978, fluid, lead) when (isnumber(@a)) {
	.g-grid-props(@a, 100%, @module-978-fluid, @gutter-978-fluid, lead);
}

// d
.g-grid(@a, d) when not (@a = a)  and not (@a = p) { .g-grid(@a, 978); }
.g-grid(@a, d, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 978, @b); }
.g-grid(@a, d, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 978, @b, @c); }

// desktop
.g-grid(@a, desktop) when not (@a = a) and not (@a = p) { .g-grid(@a, 978); }
.g-grid(@a, desktop, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 978, @b); }
.g-grid(@a, desktop, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 978, @b, @c); }

// XGA
.g-grid(@a, XGA) when not (@a = a) and not (@a = p) { .g-grid(@a, 978); }
.g-grid(@a, XGA, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 978, @b); }
.g-grid(@a, XGA, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 978, @b, @c); }


// tablet
// 748 grid/WVGA
// vars
@width-748:748px;
@module-748:44px;
@gutter-748:20px;
@padding-748:10px;
@columns-748:12;
// fluid tablet vars
@module-748-fluid:100% * (@module-748 / @width-748);
@gutter-748-fluid:100% * (@gutter-748 / @width-748);
@padding-748-fluid:100% * (@padding-748 / (@width-748 + @padding-748 * 2));

// props
.g-grid(@a, 748) when (isnumber(@a)) {
	.g-grid-props(@a, @width-748, @module-748, @gutter-748, false);
}
.g-grid(all, 748) {
	.g-grid-props(@columns-748, @width-748, @module-748, @gutter-748, false);
}
.g-grid(padding, 748) {
	.g-grid-padding(@padding-748);
}
.g-grid(padding, 748, fluid) {
	.g-grid-padding(@padding-748-fluid);
}
.g-grid(@a, 748, only) when (isnumber(@a)) {
	.g-grid-width(@a,@module-748,@gutter-748);
}
.g-grid(@a, 748, lead) when (isnumber(@a)) {
	.g-grid-props(@a, @width-748, @module-748, @gutter-748, lead);
}
// fluid
.g-grid(@a, 748, fluid) when (isnumber(@a)) {
	.g-grid-props(@a, 100%, @module-748-fluid, @gutter-748-fluid, false);
}
.g-grid(@a, 748, fluid, only) when (isnumber(@a)) {
	.g-grid-width(@a, @module-748-fluid, @gutter-748-fluid);
}
.g-grid(@a, 748, fluid, lead) when (isnumber(@a)) {
	.g-grid-props(@a, 100%, @module-748-fluid, @gutter-748-fluid, lead);
}

// t
.g-grid(@a, t) when not (@a = a)  and not (@a = p) { .g-grid(@a, 748); }
.g-grid(@a, t, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 748, @b); }
.g-grid(@a, t, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 748, @b, @c); }

// tablet
.g-grid(@a, tablet) when not (@a = a) and not (@a = p) { .g-grid(@a, 748); }
.g-grid(@a, tablet, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 748, @b); }
.g-grid(@a, tablet, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 748, @b, @c); }

// WVGA
.g-grid(@a, WVGA) when not (@a = a) and not (@a = p) { .g-grid(@a, 748); }
.g-grid(@a, WVGA, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 748, @b); }
.g-grid(@a, WVGA, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 748, @b, @c); }


// portrait
// 460 grid/HVGA
// vars
@width-460:460px;
@module-460:40px;
@gutter-460:20px;
@padding-460:10px;
@columns-460:8;
// fluid mobile vars
@module-460-fluid:100% * (@module-460 / @width-460);
@gutter-460-fluid:100% * (@gutter-460 / @width-460);
@padding-460-fluid:100% * (@padding-460 / (@width-460 + @padding-460 * 2));

// props
.g-grid(@a, 460) when (isnumber(@a)) {
	.g-grid-props(@a, @width-460, @module-460, @gutter-460, false);
}
.g-grid(all, 460) {
	.g-grid-props(@columns-460, @width-460, @module-460, @gutter-460, false);
}
.g-grid(padding, 460) {
	.g-grid-padding(@padding-460);
}
.g-grid(padding, 460, fluid) {
	.g-grid-padding(@padding-460-fluid);
}
.g-grid(@a, 460, only) when (isnumber(@a)) {
	.g-grid-width(@a,@module-460,@gutter-460);
}
.g-grid(@a, 460, lead) when (isnumber(@a)) {
	.g-grid-props(@a, @width-460, @module-460, @gutter-460, lead);
}
// fluid
.g-grid(@a, 460, fluid) when (isnumber(@a)) {
	.g-grid-props(@a, 100%, @module-460-fluid, @gutter-460-fluid, false);
}
.g-grid(@a, 460, fluid, only) when (isnumber(@a)) {
	.g-grid-width(@a, @module-460-fluid, @gutter-460-fluid);
}
.g-grid(@a, 460, fluid, lead) when (isnumber(@a)) {
	.g-grid-props(@a, 100%, @module-460-fluid, @gutter-460-fluid, lead);
}

// p
.g-grid(@a, t) when not (@a = a)  and not (@a = p) { .g-grid(@a, 460); }
.g-grid(@a, t, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 460, @b); }
.g-grid(@a, t, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 460, @b, @c); }

// portrait
.g-grid(@a, tablet) when not (@a = a) and not (@a = p) { .g-grid(@a, 460); }
.g-grid(@a, tablet, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 460, @b); }
.g-grid(@a, tablet, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 460, @b, @c); }

// HVGA
.g-grid(@a, HVGA) when not (@a = a) and not (@a = p) { .g-grid(@a, 460); }
.g-grid(@a, HVGA, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 460, @b); }
.g-grid(@a, HVGA, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 460, @b, @c); }


// mobile
// 300 grid/QVGA
// vars
@width-300:300px;
@module-300:27px;
@gutter-300:12px;
@padding-300:10px;
@columns-300:8;
// fluid 300 vars
@module-300-fluid:100% * (@module-300 / @width-300);
@gutter-300-fluid:100% * (@gutter-300 / @width-300);
@padding-300-fluid:100% * (@padding-300 / (@width-300 + @padding-300 * 2));

// props
.g-grid(@a, 300) when (isnumber(@a)) {
	.g-grid-props(@a, @width-300, @module-300, @gutter-300, false);
}
.g-grid(all, 300) {
	.g-grid-props(@columns-300, @width-300, @module-300, @gutter-300, false);
}
.g-grid(padding, 300) {
	.g-grid-padding(@padding-300);
}
.g-grid(padding, 300, fluid) {
	.g-grid-padding(@padding-300-fluid);
}
.g-grid(@a, 300, only) when (isnumber(@a)) {
	.g-grid-width(@a,@module-300,@gutter-300);
}
.g-grid(@a, 300, lead) when (isnumber(@a)) {
	.g-grid-props(@a, @width-300, @module-300, @gutter-300, lead);
}
// fluid
.g-grid(@a, 300, fluid) when (isnumber(@a)) {
	.g-grid-props(@a, 100%, @module-300-fluid, @gutter-300-fluid, false);
}
.g-grid(@a, 300, fluid, only) when (isnumber(@a)) {
	.g-grid-width(@a, @module-300-fluid, @gutter-300-fluid);
}
.g-grid(@a, 300, fluid, lead) when (isnumber(@a)) {
	.g-grid-props(@a, 100%, @module-300-fluid, @gutter-300-fluid, lead);
}

// m
.g-grid(@a, m) when not (@a = a)  and not (@a = p) { .g-grid(@a, 300); }
.g-grid(@a, m, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 300, @b); }
.g-grid(@a, m, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 300, @b, @c); }

// mobile
.g-grid(@a, mobile) when not (@a = a) and not (@a = p) { .g-grid(@a, 300); }
.g-grid(@a, mobile, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 300, @b); }
.g-grid(@a, mobile, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 300, @b, @c); }

// QVGA
.g-grid(@a, QVGA) when not (@a = a) and not (@a = p) { .g-grid(@a, 300); }
.g-grid(@a, QVGA, @b) when not (@a = p) and not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) { .g-grid(@a, 300, @b); }
.g-grid(@a, QVGA, @b, @c) when not (@b = l) and not (@b = left) and not (@b = f) and not (@b = flex) and not (@b = o) and not (@c = l) and not (@c = left) and not (@c = f) and not (@c = flex) and not (@c = o) { .g-grid(@a, 300, @b, @c); }


// ------------------g-grid----------------- 
// ----https://github.com/aw2basc/g-grid----

// border-box ftw
* { -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; }

// g-grid
.g-grid() {}
.g-grid(@a) {}
.g-grid(@a, @b) {}
.g-grid(@a, @b, @c) {}
.g-grid(@a, @b, @c, @d, @b) {}

// cf
.g-grid(@a) when (@a = clearfix), (@a = cf) {
	zoom:1;
	&:before { content:""; display:table; }
	&:after { content:""; display:table; clear:both; }
}

// etc
.g-grid-etc() {
	float:left;
	display:inline;
	min-height:1px;
}

// width
.g-grid-width(@a,@m,@g) {
	width:(@m * @a + @g * (@a - 1));
}

// padding
.g-grid-padding(@p) {
	padding-left:@p;
	padding-right:@p;
}

.g-grid-props(@a, @w, @m, @g){} 
.g-grid-props(@a, @w, @m, @g, @c){} 
// <<<<
.g-grid-props(@a, @w, @m, @g, @c) when not (@c = lead) and ((@m * @a + @g * (@a - 1)) < @w) {
	margin-left:@g;
	.g-grid-width(@a,@m,@g);
	.g-grid-etc();
}
// <<<< 1st
.g-grid-props(@a, @w, @m, @g, @c) when (@c = lead) and ((@m * @a + @g * (@a - 1)) < @w) {
	clear:left;
	.g-grid-width(@a,@m,@g);
	.g-grid-etc();
}
// @@@@
.g-grid-props(@a, @w, @m, @g, @c) when ((@m * @a + @g * (@a - 1)) >= @w) {
	width:@w;
	margin:0 auto;
	clear:left;
	.g-grid(clearfix);
}

// g
.g(){
	.g-grid();
}
.g(@a){
	.g-grid(@a);
}
.g(@a, @b){
	.g-grid(@a, @b);
}
.g(@a, @b, @c){
	.g-grid(@a, @b, @c);
}
.g(@a, @b, @c, @d){
	.g-grid(@a, @b, @c, @d);
}
.g(@a, @b, @c, @d, @e){
	.g-grid(@a, @b, @c, @d, @e);
}

// all
.g-grid(a) {}
.g-grid(a,@a){ .g-grid(all,@a); }
.g-grid(a,@a,@b){ .g-grid(all,@a,@b); }
.g-grid(a,@a,@b,@c){ .g-grid(all,@a,@b,@c); }
.g-grid(a,@a,@b,@c,@d){ .g-grid(all,@a,@b,@c,@d); }

// padding
.g-grid(p) {}
.g-grid(p,@a){ .g-grid(padding,@a); }
.g-grid(p,@a,@b){ .g-grid(padding,@a,fluid); }
.g-grid(p,@a,@b,@c){ .g-grid(padding,@a,@b,@c); }
.g-grid(p,@a,@b,@c,@d){ .g-grid(padding,@a,@b,@c,@d); }

// lead
.g-grid(@a,@b,l){.g-grid(@a,@b,lead)}
.g-grid(@a,@b,@c,l) {.g-grid(@a,@b,@c,lead)}
.g-grid(@a,@b,l,@c) {}
.g-grid(@a,@b,left){.g-grid(@a,@b,lead)}
.g-grid(@a,@b,@c,left) {.g-grid(@a,@b,@c,lead)}
.g-grid(@a,@b,left,@c) {}

// fluid
.g-grid(@a,@b,f) when not (@a = p) {.g-grid(@a,@b,fluid)}
.g-grid(@a,@b,f,@c) when not (@c = l) and not (@c = left) and not (@c = o) {.g-grid(@a,@b,fluid,@c)}
.g-grid(@a,@b,@c,f) {}
.g-grid(@a,@b,flex){.g-grid(@a,@b,fluid)}
.g-grid(@a,@b,flex,@c) when not (@c = l) and not (@c = left) and not (@c = o) {.g-grid(@a,@b,fluid,@c)}
.g-grid(@a,@b,@c,flex) {}

// only
.g-grid(@a,@b,o){.g-grid(@a,@b,only)}
.g-grid(@a,@b,@c,o){.g-grid(@a,@b,fluid,only)}
.g-grid(@a,@b,o,@c){}
.g-grid(@a,@b,@c,o){}
